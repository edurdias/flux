site_name: Flux
site_description: Flux is a Python-based workflow orchestration system that enables you to build complex, reliable applications by breaking them down into manageable tasks and workflows. Whether you're processing data pipelines, orchestrating microservices, automating business processes, or building machine learning workflows, Flux provides the tools and infrastructure you need to create robust, scalable solutions.
repo_url: https://github.com/edurdias/flux
repo_name: edurdias/flux

theme:
  name: material
  features:
    - navigation.instant
    - navigation.tracking
    - navigation.tabs
    - navigation.tabs.sticky
    - navigation.sections
    - navigation.expand
    - navigation.indexes
    - navigation.top
    - toc.follow
    - search.suggest
    - search.highlight
    - content.tabs.link
    - content.code.copy
  language: en
  palette:
    - scheme: default
      primary: deep-purple
      accent: amber
      toggle:
        icon: material/brightness-4
        name: Dark mode
    - scheme: slate
      primary: deep-purple
      accent: amber
      toggle:
        icon: material/brightness-7
        name: Light mode

  icon:
    repo: fontawesome/brands/github

extra:
  social:
    - icon: fontawesome/brands/github
      link: https://github.com/edurdias/flux
      name: Flux on GitHub

markdown_extensions:
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - admonition
  - pymdownx.arithmatex:
      generic: true
  - footnotes
  - pymdownx.details
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.mark
  - attr_list
  - toc:
      permalink: true

plugins:
  - search
  - mkdocstrings:
      handlers:
        python:
          paths: [flux]
          options:
            docstring_style: google
            show_source: true
            show_root_heading: true

nav:
  - Home: index.md
  - Getting Started:
      - Welcome: introduction/welcome.md
      - Installation: getting-started/installation.md
      - Your First Workflow: getting-started/first-workflow.md
      - Quick Start Tutorial:
          - Simple Workflow: getting-started/tutorials/simple-workflow.md
          - Adding Error Handling: getting-started/tutorials/error-handling.md
          - Parallel Execution: getting-started/tutorials/parallel-execution.md
          - Pipeline Processing: getting-started/tutorials/pipeline-processing.md
  - Concepts:
      - Key Features: introduction/features.md
      - Architecture Overview: introduction/architecture.md
      - Core Concepts:
          - Tasks: getting-started/tasks.md
          - Workflows: getting-started/workflows.md
          - Execution Context: getting-started/execution-context.md
          - Built-in Tasks: getting-started/built-in-tasks.md
  # - User Guide:
  #     - Building Workflows:
  #         - Task Definition and Decoration: user-guide/task-definition.md
  #         - Workflow Patterns: user-guide/workflow-patterns.md
  #         - Data Flow and State Management: user-guide/data-flow.md
  #     - Advanced Features:
  #         - Task Configuration: user-guide/task-configuration.md
  #         - Workflow Control: user-guide/workflow-control.md
  #         - Task Mapping and Iteration: user-guide/task-mapping.md
  #     - Error Handling and Resilience:
  #         - Error Management: user-guide/error-management.md
  #         - Fault Tolerance: user-guide/fault-tolerance.md
  #     - Security and Secrets:
  #         - Secrets Management: user-guide/secrets-management.md
  # - Deployment:
  #     - Local Development:
  #         - Local Execution: deployment/local-execution.md
  #         - Development Workflow: deployment/development-workflow.md
  #         - Testing and Debugging: deployment/testing-debugging.md
  #     - Distributed Deployment:
  #         - Server Architecture: deployment/server-architecture.md
  #         - Server Setup: deployment/server-setup.md
  #         - Worker Management: deployment/worker-management.md
  # - API Reference:
  #     - HTTP API:
  #         - Workflow Management: api-reference/http-api/workflow-management.md
  #         - Execution Control: api-reference/http-api/execution-control.md
  #         - Status and Monitoring: api-reference/http-api/status-monitoring.md
  #         - Administration: api-reference/http-api/administration.md
  #     - CLI Reference:
  #         - Command Overview: api-reference/cli/overview.md
  #         - Service Commands: api-reference/cli/service-commands.md
  #         - Workflow Commands: api-reference/cli/workflow-commands.md
  #         - Secrets Management: api-reference/cli/secrets-commands.md
  #     - Python API:
  #         - Core Decorators: api-reference/python-api/core-decorators.md
  #         - Built-in Tasks: api-reference/python-api/built-in-tasks.md
  #         - Execution Context: api-reference/python-api/execution-context.md
  #         - Workflow Execution: api-reference/python-api/workflow-execution.md
  # - Tutorials:
  #     - Beginner Tutorials:
  #         - Building Your First Data Pipeline: tutorials/beginner/first-data-pipeline.md
  #         # - Adding Resilience to Workflows: tutorials/beginner/adding-resilience.md
  #         - Working with External APIs: tutorials/beginner/external-apis.md
  #     - Intermediate Tutorials:
  #         - Multi-Step Data Processing: tutorials/intermediate/multi-step-processing.md
  #         - Distributed Computing Patterns: tutorials/intermediate/distributed-patterns.md
  #         - State Management in Long-Running Workflows: tutorials/intermediate/state-management.md
  #         - Building Reusable Workflow Components: tutorials/intermediate/reusable-components.md
  #     - Advanced Tutorials:
  #         - Custom Task Types and Extensions: tutorials/advanced/custom-task-types.md
  #         - Performance Optimization: tutorials/advanced/performance-optimization.md
  #         - Integration with External Systems: tutorials/advanced/external-systems.md
  #         - Building Workflow Libraries: tutorials/advanced/workflow-libraries.md
